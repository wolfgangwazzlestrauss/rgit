# GitHub Actions workflow file.
#
# For more information, visit
# https://docs.github.com/actions/learn-github-actions.

name: package

# Make workflow run only for pushed SemVer tags.
on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  release:
    name: Create a GitHub release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.extract_tag.outputs.tag }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Extract Git tag
        id: extract_tag
        shell: bash
        run: |
          echo "##[set-output name=tag;]$(echo ${GITHUB_REF#refs/tags/})"
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.github_release.outputs.changelog }}

  archives:
    name: Build and upload archives to GitHub release
    needs: release
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - x86_64-pc-windows-gnu
          - x86_64-pc-windows-msvc
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Install latest stable Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          args: --release --target ${{ matrix.target }}
          command: build
      - name: Build release archive
        # Bash is installed on the Windows GitHub runners. See
        # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md#language-and-runtime.
        shell: bash
        run: |
          mkdir dist
          cp "target/${{ matrix.target }}/release/rgit" dist/
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            7z a rgit.zip dist/
          else
            zip -r rgit.zip dist/
          fi
      - name: Upload release archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: rgit.zip
          asset_name: >-
            rgit-${{ needs.release.outputs.tag }}-${{ matrix.target }}.zip
          asset_content_type: application/octet-stream
